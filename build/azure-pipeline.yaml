name: BrandonPotter.GoogleAuthenticator - build and test
trigger: [ master ]
pr: [ master ]

variables:
  buildConfiguration: Release

jobs:
- job: Test

  strategy:
    matrix:
      linux:
        imageName: 'ubuntu-latest'
      mac:
        imageName: 'macOS-latest'
      windows:
        imageName: 'windows-latest'

  pool:
    vmImage: $(imageName)
  
  steps:

  # There is a legacy project in the solution that dotnet won't build, so restoring and building individual projects
  - script: dotnet restore ./Google.Authenticator/Google.Authenticator.csproj 
    displayName: dotnet restore package

  - script: dotnet restore ./Google.Authenticator.Tests/Google.Authenticator.Tests.csproj --no-dependencies
    displayName: dotnet restore tests

  - script: dotnet build ./Google.Authenticator/Google.Authenticator.csproj --configuration $(buildConfiguration) --no-restore
    displayName: build package

  - script: dotnet build ./Google.Authenticator.Tests/Google.Authenticator.Tests.csproj --configuration $(buildConfiguration) --no-restore --no-dependencies
    displayName: build tests

  - task: UseDotNet@2
    displayName: Install dotnet 6
    inputs:
      packageType: sdk
      version: 6.x

  - task: UseDotNet@2
    displayName: Install dotnet 7
    inputs:
      packageType: sdk
      version: 7.x

  - task: DotNetCoreCLI@2
    displayName: test
    inputs:
      command: test
      projects: './Google.Authenticator.Tests/Google.Authenticator.Tests.csproj'
      arguments: '--configuration $(buildConfiguration)'

- job: Pack
  dependsOn: Test
  condition: and(succeeded('Test'), or(eq(variables['Build.SourceBranchName'], 'master'),eq(variables['Build.SourceBranchName'], 'develop')))

  pool:
    vmImage: 'windows-latest'

  steps:
  # This creates the Nuget package only if the change was from "master". It also supports publishing from a "develop" branch, which is not currently used in this project
  - script: dotnet build ./Google.Authenticator/Google.Authenticator.csproj --configuration $(buildConfiguration)
    displayName: build package

  - script: dotnet pack ./Google.Authenticator/Google.Authenticator.csproj --configuration $(buildConfiguration) --no-build --output %Build_ArtifactStagingDirectory%
    displayName: pack

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: NugetPackage

